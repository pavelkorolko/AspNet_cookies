using Classwork_19._01._24_cookiesUsage_.Interfaces;
using Classwork_19._01._24_cookiesUsage_.Models;
using Classwork_19._01._24_cookiesUsage_.Repositories;

namespace Classwork_19._01._24_cookiesUsage_
{
    public class Program
    {
        //Представим что у вас есть личный Блог. Для имитации блога, вы можете создать список (List<News>) новостей и просто вывести их на страницу, так же используйте
        //элементарный шаблон.  

        //Реализуйте страницу "Настройки чтения", на которой пользователь может выбрать предпочитаемый способ чтения блога: светлую или темную тему.Когда пользователь
        //выбирает свой способ чтения и сохраняет настройки, они сохраняются в Cookie, чтобы они могли быть использованы при следующем посещении сайта.

        public static void Main(string[] args)
        {
            var builder = WebApplication.CreateBuilder(args);

            // Add services to the container.
            builder.Services.AddControllersWithViews();
            builder.Services.AddSingleton<NewsRepository>();
            builder.Services.AddSingleton<UserRepository>();
            builder.Services.AddScoped<IUserPreferences, UserPreferenceService>();

            var app = builder.Build();

            // Configure the HTTP request pipeline.
            if (!app.Environment.IsDevelopment())
            {
                app.UseExceptionHandler("/Home/Error");
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }

            app.UseHttpsRedirection();
            app.UseStaticFiles();

            app.UseRouting();

            app.UseAuthorization();

            app.MapControllerRoute(
                name: "default",
                pattern: "{controller=Home}/{action=Index}/{id?}");

            app.Run();
        }
    }
}